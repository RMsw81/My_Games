name: Build WASM (Emscripten)

on:
  push:
    branches: main
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '.gitignore'
      - '*.rst'
      - '*.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/build-emsdk.yml'

  pull_request:
    branches: main
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '.gitignore'
      - '*.rst'
      - '*.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/build-emsdk.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-emsdk
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      SDK_VERSION: 3.1.32.0
      SDK_ARCHIVE: python3.11-wasm-sdk-Ubuntu-22.04.tar.lz4
      SDKROOT: /opt/python-wasm-sdk

    steps:
    - uses: actions/checkout@v4.2.0

    - name: Check available disk space
      run: df -h

    - name: Install dependencies
      run: |
        pip3 install cython==3.0.10
        pip3 install pygame
        pip3 install pygbag
        pip3 install flask
        pip3 install gunicorn

    - name: Create download directory
      run: mkdir -p ${{ github.workspace }}/sdk_downloads

    - name: Install python-wasm-sdk
      run: |
        sudo apt-get install -y lz4
        echo "Downloading SDK from https://github.com/pygame-web/python-wasm-sdk/releases/download/$SDK_VERSION/$SDK_ARCHIVE"
        curl -sL --retry 5 -o ${{ github.workspace }}/sdk_downloads/$SDK_ARCHIVE https://github.com/pygame-web/python-wasm-sdk/releases/download/$SDK_VERSION/$SDK_ARCHIVE
        tar -xvf ${{ github.workspace }}/sdk_downloads/$SDK_ARCHIVE -C /opt --use-compress-program=lz4
        echo "Contenuto di /opt/python-wasm-sdk dopo l'estrazione:"
        ls -R /opt/python-wasm-sdk/prebuilt/emsdk  # Controlla solo il contenuto della directory specifica

    - name: Search for python3-wasm
      run: |
        echo "Cercando il file python3-wasm all'interno di /opt/python-wasm-sdk..."
        find /opt/python-wasm-sdk -name "python3-wasm"  # Cerca il file specifico

    - name: Build WASM with emsdk
      run: |
        if [ -f "/opt/python-wasm-sdk/prebuilt/emsdk/python3-wasm" ]; then
            chmod +x /opt/python-wasm-sdk/prebuilt/emsdk/python3-wasm  # Assicurati che sia eseguibile
            echo "Trovato python3-wasm, avvio della build..."
            /opt/python-wasm-sdk/prebuilt/emsdk/python3-wasm p/main.py build -j$(nproc) || { echo "Build failed"; exit 1; }
        else
            echo "Il file python3-wasm non esiste in /opt/python-wasm-sdk/prebuilt/emsdk"
            exit 1
        fi

    - name: Generate libpygame.a static binaries archive
      run: |
        mkdir -p dist
        SYS_PYTHON=python3 /opt/python-wasm-sdk/prebuilt/emsdk/emscripten/emar rcs dist/libpygame.a $(find build/temp.wasm32-*/ | grep o$)

    - name: Clean up after build
      run: |
        rm -rf ${{ github.workspace }}/sdk_downloads

    - name: Upload dist
      uses: actions/upload-artifact@v4
      with:
        name: pygame-wasm-dist
        path: ./dist/*
