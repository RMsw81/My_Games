name: Build WASM (Emscripten)

on:
  push:
    branches: main
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '.gitignore'
      - '*.rst'
      - '*.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/build-emsdk.yml'

  pull_request:
    branches: main
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '.gitignore'
      - '*.rst'
      - '*.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/build-emsdk.yml'

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      SDK_VERSION: 3.1.32.0
      SDK_ARCHIVE: python3.11-wasm-sdk-Ubuntu-22.04.tar.lz4
      SDKROOT: /opt/python-wasm-sdk

    steps:
    - uses: actions/checkout@v4.2.0

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y lz4
        pip3 install cython==3.0.10 pygame pygbag flask gunicorn

    - name: Install python-wasm-sdk
      run: |
        mkdir -p ${{ github.workspace }}/sdk_downloads
        echo "Downloading SDK..."
        curl -sL --retry 5 -o ${{ github.workspace }}/sdk_downloads/$SDK_ARCHIVE https://github.com/pygame-web/python-wasm-sdk/releases/download/$SDK_VERSION/$SDK_ARCHIVE
        echo "Extracting SDK..."
        tar -xvf ${{ github.workspace }}/sdk_downloads/$SDK_ARCHIVE -C /opt --use-compress-program=lz4

    - name: Build WASM with emsdk
      run: |
        if [ -f "/opt/python-wasm-sdk/prebuilt/emsdk/python3-wasm" ]; then
            echo "Avviando la build WASM..."
            chmod +x /opt/python-wasm-sdk/prebuilt/emsdk/python3-wasm
            /opt/python-wasm-sdk/prebuilt/emsdk/python3-wasm p/main.py build -j$(nproc) || { echo "Build failed"; exit 1; }
        else
            echo "Il file python3-wasm non esiste."
            exit 1
        fi

    - name: Clean up
      run: rm -rf ${{ github.workspace }}/sdk_downloads

    - name: Upload dist
      uses: actions/upload-artifact@v4
      with:
        name: pygame-wasm-dist
        path: ./dist/*
